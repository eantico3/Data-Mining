# -*- coding: utf-8 -*-
"""HomeworkOne_Emily_An.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JvvuaRm_Rytr2GkQHB0fP1fOAh7fchyd

Homework One
"""

import numpy as np
import pandas as pd

from pandas import Series, DataFrame

weatherData = pd.read_csv('http://storm.cis.fordham.edu/~yli/data/weather.csv')
#Q1 Show columns of the dataset. 
weatherData

#Q2  How many cases we have in this dataset (one row is a case)
print(len(weatherData))

#Q3 Show some statistics info about temperature and humidity such as mean, min, max, quantiles
weatherData.temperature.describe()

weatherData.humidity.describe()

#Q4 What are modes for each column. 
weatherData.mode()

#Q5 Are there outliers in the above two columns (use the formula we have used in class) 
q25, q75=np.percentile(weatherData['temperature'],[25,75]) 
IQR = q75-q25
IQR

lowerB = q25 - IQR*1.5
upperB = q75 + IQR*1.5
print(f'upper b is {upperB} and lower b is {lowerB}')

mask1 = weatherData['temperature'] > upperB
weatherData[mask1]

mask2 = weatherData['temperature'] < lowerB
weatherData[mask2]

q25, q75=np.percentile(weatherData['humidity'],[25,75]) #Q5
IQR = q75-q25
IQR

lowerB = q25 - IQR*1.5
upperB = q75 + IQR*1.5
print(f'upper b is {upperB} and loweer b is {lowerB}')

mask1 = weatherData['humidity'] > upperB
weatherData[mask1]

mask2 = weatherData['humidity'] < lowerB
weatherData[mask2]

#Q6 Draw pairwise plots for columns with numerical values. 
import matplotlib.pyplot as plt 
import seaborn as sns

sns.pairplot(
    weatherData,
    x_vars=["temperature", "humidity"],
    y_vars=["temperature", "humidity"],
)

#Q7 Draw boxplots and bar chart for columns with numerical values. 
bp = weatherData.plot.box(sharey = True, figsize = (8,4))
bp = weatherData.plot.bar(sharey = True, figsize = (8,4))

#Q8 Draw scatter plot for two columns with numerical values. 
fig, ax=plt.subplots(1, figsize=(6,6))

weatherData.plot(ax=ax, x=['temperature'],y=['humidity'], kind='scatter', #for any two columns in the dataframe set x and y equal to those columns
        marker='o', s=100, c='Red',
        label='two')

ax.set(xlim=(30,100),ylim=(0,80),
       xlabel='temperature', ylabel='humidity',
       title='Temperature vs. Humidity')
plt.legend(loc='best', frameon=True)

index = range(0,len(weatherData))

fig, ax=plt.subplots(1, figsize=(6,6))

ax.scatter(x=index,y=weatherData.temperature, #for any two columns in the dataframe set x and y equal to those columns
        marker='o', s=100, c='Red',
        label='two')

ax.set(xlabel='index', ylabel='temperature',
       title='Temperature')
plt.legend(loc='best', frameon=True)

index = range(0,len(weatherData))

fig, ax=plt.subplots(1, figsize=(6,6))

ax.scatter(x=index,y=weatherData.humidity, #for any two columns in the dataframe set x and y equal to those columns
        marker='o', s=100, c='Red',
        label='two')

ax.set(xlabel='index', ylabel='humidity',
       title='Humidity')
plt.legend(loc='best', frameon=True)

#Q9 Create a pivot table to show the mean values of humidity, temperature in terms of whether
players play vs. outlook. 
import pandas as pd

table = weatherData.pivot_table(index='outlook',columns='Play',
                       aggfunc='mean',fill_value=0,
                       values=['humidity','temperature'])
table

#Q10  Create a pivot table to show the max values of humidity in terms of whether players play vs.
#different temperature groups starting from 45 degree and step is 10 degrees. 
temp = pd.cut(weatherData['temperature'], [45,55,65,75,85,95])
table = weatherData.pivot_table(index=temp, columns='Play',
                                aggfunc='max',values=['humidity'], fill_value=0)
table
